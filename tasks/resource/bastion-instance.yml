- name: Fetch user IP using ipify
  ipify_facts:
  register: user_ip
  
- name: Create bastion-instance security group
  openstack.cloud.security_group:
    cloud: kakao-cloud
    state: present
    name: "ansible-bastion-sg"
  register: bastion_security_group

- name: Add rules to bastion-instance security group
  openstack.cloud.security_group_rule:
    cloud: kakao-cloud
    security_group: "{{ bastion_security_group.security_group.id }}"
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    direction: ingress
    remote_ip_prefix: "{{ user_ip.ansible_facts.ipify_public_ip }}/32"

- name: Create bastion-instance
  openstack.cloud.server:
    state: present
    cloud: kakao-cloud
    name: "ansible-bastion"
    flavor: "{{ vm.flavor }}"
    image: "{{ vm.image_id }}"
    key_name: "{{ vm.key_pair }}"
    boot_from_volume: True
    volume_size: 30
    terminate_volume: true
    security_groups:
      - "{{ bastion_security_group.security_group.id }}"
    nics:
      - net-id: "{{ web_network_id }}"
    wait: yes
    auto_ip: false
  register: bastion_vm

- name: Set app fixed IP address as a fact
  set_fact:
    bastion_fixed_ip: "{{ item.addr }}"
  when: item["OS-EXT-IPS:type"] == "fixed"
  with_items: "{{ bastion_vm.server.addresses.values() | flatten(levels=1) }}"

- name: Allocate and associate floating IP to bastion-instance
  openstack.cloud.floating_ip:
    cloud: kakao-cloud
    state: present
    server: "{{ bastion_vm.server.id }}"
    network: "{{ floating_ip.network_id }}"
  register: bastion_floating_ip_result

- name: Set web floating IP
  set_fact:
    bastion_floating_ip: "{{bastion_floating_ip_result.floating_ip.floating_ip_address}}"
      
- name: Add bastion-instance to Ansible inventory
  add_host:
    name: bastion-vm
    ansible_host: "{{ bastion_floating_ip }}"
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "{{ vm.key_pair }}.pem"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

- name: Remove bastion-instance IP from known_hosts
  lineinfile:
    path: "~/.ssh/known_hosts"
    state: absent
    regexp: "^{{ bastion_floating_ip }}[ ,]"

- name: Wait for SSH to be available on bastion-instance
  wait_for:
    host: "{{ bastion_floating_ip }}"
    port: 22
    delay: 5
    timeout: 180
    state: started
  register: result
    
  